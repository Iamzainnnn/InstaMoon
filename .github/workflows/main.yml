name: Download and Upload Instagram APK

on:
  push:
    branches:
      - InstaMoon  # Jab bhi `main` branch pe push hoga, workflow auto-trigger hoga
    # Manual run ka option bhi rahega

jobs:
  upload_apk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: sudo apt update && sudo apt install -y curl jq

      - name: Create Dummy File
        run: echo "This is a test file" > dummy_file.txt

      - name: Upload Dummy File to Bitbucket
        env:
          BITBUCKET_USERNAME: ${{ secrets.BITBUCKET_USERNAME }}
          BITBUCKET_APP_PASSWORD: ${{ secrets.BITBUCKET_APP_PASSWORD }}
          BITBUCKET_WORKSPACE: "iamzainnnn"
          BITBUCKET_REPO_SLUG: "instamoon"
        run: |
          API_URL="https://api.bitbucket.org/2.0/repositories/$BITBUCKET_WORKSPACE/$BITBUCKET_REPO_SLUG/downloads"
          echo "Uploading dummy_file.txt to Bitbucket..."
          curl -s -X POST "$API_URL" \
            --user "$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD" \
            --header "Content-Type: multipart/form-data" \
            --form files=@dummy_file.txt

      - name: Verify Upload & Get Download Link
        env:
          BITBUCKET_USERNAME: ${{ secrets.BITBUCKET_USERNAME }}
          BITBUCKET_APP_PASSWORD: ${{ secrets.BITBUCKET_APP_PASSWORD }}
          BITBUCKET_WORKSPACE: "iamzainnnn"
          BITBUCKET_REPO_SLUG: "instamoon"
        run: |
          API_URL="https://api.bitbucket.org/2.0/repositories/$BITBUCKET_WORKSPACE/$BITBUCKET_REPO_SLUG/downloads"
          RESPONSE=$(curl -s -u "$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD" "$API_URL")
          FILE_NAME=$(echo "$RESPONSE" | jq -r '.values[0].name')
          if [[ -n "$FILE_NAME" && "$FILE_NAME" != "null" ]]; then
            DOWNLOAD_LINK="https://bitbucket.org/$BITBUCKET_WORKSPACE/$BITBUCKET_REPO_SLUG/downloads/$FILE_NAME"
            echo "UPLOAD_SUCCESS=true" >> $GITHUB_ENV
            echo "DOWNLOAD_LINK=$DOWNLOAD_LINK" >> $GITHUB_ENV
          else
            echo "UPLOAD_SUCCESS=false" >> $GITHUB_ENV
          fi

      - name: Send Telegram Notification
        if: env.UPLOAD_SUCCESS == 'true'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "chat_id=$TELEGRAM_CHAT_ID" \
            --data-urlencode "text=ðŸš€ *Dummy File Uploaded Successfully!*

ðŸ”— [Download Here]($DOWNLOAD_LINK)" \
            --data-urlencode "parse_mode=Markdown"
